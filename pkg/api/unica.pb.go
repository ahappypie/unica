// Code generated by protoc-gen-go. DO NOT EDIT.
// source: unica.proto

package unica

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UnicaRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnicaRequest) Reset()         { *m = UnicaRequest{} }
func (m *UnicaRequest) String() string { return proto.CompactTextString(m) }
func (*UnicaRequest) ProtoMessage()    {}
func (*UnicaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_unica_02221d71f179fd79, []int{0}
}
func (m *UnicaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnicaRequest.Unmarshal(m, b)
}
func (m *UnicaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnicaRequest.Marshal(b, m, deterministic)
}
func (dst *UnicaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnicaRequest.Merge(dst, src)
}
func (m *UnicaRequest) XXX_Size() int {
	return xxx_messageInfo_UnicaRequest.Size(m)
}
func (m *UnicaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnicaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnicaRequest proto.InternalMessageInfo

type UnicaResponse struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnicaResponse) Reset()         { *m = UnicaResponse{} }
func (m *UnicaResponse) String() string { return proto.CompactTextString(m) }
func (*UnicaResponse) ProtoMessage()    {}
func (*UnicaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_unica_02221d71f179fd79, []int{1}
}
func (m *UnicaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnicaResponse.Unmarshal(m, b)
}
func (m *UnicaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnicaResponse.Marshal(b, m, deterministic)
}
func (dst *UnicaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnicaResponse.Merge(dst, src)
}
func (m *UnicaResponse) XXX_Size() int {
	return xxx_messageInfo_UnicaResponse.Size(m)
}
func (m *UnicaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnicaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnicaResponse proto.InternalMessageInfo

func (m *UnicaResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*UnicaRequest)(nil), "unica.UnicaRequest")
	proto.RegisterType((*UnicaResponse)(nil), "unica.UnicaResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IdServiceClient is the client API for IdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdServiceClient interface {
	GetId(ctx context.Context, in *UnicaRequest, opts ...grpc.CallOption) (*UnicaResponse, error)
}

type idServiceClient struct {
	cc *grpc.ClientConn
}

func NewIdServiceClient(cc *grpc.ClientConn) IdServiceClient {
	return &idServiceClient{cc}
}

func (c *idServiceClient) GetId(ctx context.Context, in *UnicaRequest, opts ...grpc.CallOption) (*UnicaResponse, error) {
	out := new(UnicaResponse)
	err := c.cc.Invoke(ctx, "/unica.IdService/GetId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdServiceServer is the server API for IdService service.
type IdServiceServer interface {
	GetId(context.Context, *UnicaRequest) (*UnicaResponse, error)
}

func RegisterIdServiceServer(s *grpc.Server, srv IdServiceServer) {
	s.RegisterService(&_IdService_serviceDesc, srv)
}

func _IdService_GetId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnicaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdServiceServer).GetId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unica.IdService/GetId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdServiceServer).GetId(ctx, req.(*UnicaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "unica.IdService",
	HandlerType: (*IdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetId",
			Handler:    _IdService_GetId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "unica.proto",
}

func init() { proto.RegisterFile("unica.proto", fileDescriptor_unica_02221d71f179fd79) }

var fileDescriptor_unica_02221d71f179fd79 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xcd, 0xcb, 0x4c,
	0x4e, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xf8, 0xb8, 0x78, 0x42,
	0x41, 0x8c, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x25, 0x79, 0x2e, 0x5e, 0x28, 0xbf, 0xb8,
	0x20, 0x3f, 0xaf, 0x38, 0x55, 0x88, 0x8f, 0x8b, 0x29, 0x33, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83,
	0x25, 0x88, 0x29, 0x33, 0xc5, 0xc8, 0x91, 0x8b, 0xd3, 0x33, 0x25, 0x38, 0xb5, 0xa8, 0x2c, 0x33,
	0x39, 0x55, 0xc8, 0x84, 0x8b, 0xd5, 0x3d, 0xb5, 0xc4, 0x33, 0x45, 0x48, 0x58, 0x0f, 0x62, 0x36,
	0xb2, 0x59, 0x52, 0x22, 0xa8, 0x82, 0x10, 0x03, 0x95, 0x18, 0x9c, 0x14, 0xb9, 0x84, 0x33, 0xf3,
	0xf5, 0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x12, 0x33, 0x12, 0x0b, 0x0a, 0x2a, 0x0b, 0x32,
	0x53, 0x9d, 0xb8, 0xc0, 0xea, 0x02, 0x40, 0xae, 0x4b, 0x62, 0x03, 0x3b, 0xd2, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x5a, 0xf1, 0x49, 0x79, 0xb3, 0x00, 0x00, 0x00,
}
